import r,{useRef as e,useState as t,createContext as n,useContext as o}from"react";import a from"form_to_object";function l(){return(l=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r}).apply(this,arguments)}const c=r=>"multipart/form-data"===(r.enctype||"").toLowerCase()?new FormData(r):a(r)||{},i=n({});function u({children:r}){const{error:e,handled:t}=o(i);t.current=!0;const n=e?e.message:"";return r?"function"==typeof r?r(n,e):e?r:null:n||null}function s({children:r}){const{loading:e}=o(i);return"function"==typeof r?r(e):e?r:null}export default function({onSubmit:n,onError:o,onChange:a,autoReset:u,children:s,...f}){const d=e(!1),[m,p]=t(!1),[g,h]=t(!1);if(!n&&!a)throw new Error("onSubmit() callback is required");return r.createElement("form",l({onSubmit:async r=>{try{r.persist(),r.preventDefault(),p(!0),await n(c(r.target)),u&&r.target.reset()}catch(r){h(r),o?o(r):d.current||(r=>{console.error(r)})(r)}finally{p(!1)}},onChange:r=>a?a(c(r.currentTarget)):null},f),r.createElement(i.Provider,{value:{loading:m,error:g,handled:d}},r.createElement("fieldset",{style:{padding:0,margin:0,border:"none"},disabled:m},s)))}export{i as FormContext,u as FormError,s as FormLoading};
